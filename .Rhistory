library(usethis)
use_mit_license("Tao Yan")
devtools::use_package("vcfR")
usethis::use_package("dplyr")
usethis::use_package("snpStats")
usethis::use_package("genetics")
usethis::use_package("LDheatmap")
file.create("R/hello.R")
file.edit("R/hello.R")
file.edit("DESCRIPTION")
library(devtools)
load_all()
hello()
document(\)
document()
check()
build()
install.packages("ttplot")
install.packages("ttplot",repos = NULL)
install.packages("ttplot",repos = NULL,type = "source")
setwd(choose.dir())
install.packages("ttplot",repos = NULL,type = "source")
install.packages("ttplot",repos = NULL,type = "source")
setwd("ttplot/")
countries <- c("CHINA","USA")
devtools::use_data(countries,ttplot)
set("..")
setwd("..")
usethis::use_data(countries,ttplot)
usethis::use_data(countries,ttplot, overwrite = TRUE)
usethis::use_data(countries,ttplot)
getwd()
usethis::use_data(countries,ttplot)
usethis::use_data_raw(countries)
usethis::use_data_raw(countries, ttplot)
usethis::use_data_raw()
usethis::use_data()
usethis::use_data(countries,ttplot)
devtools::document()
setwd("ttplot/")
devtools::document()
ttplot::hello()
ttplot::hello_country()
usethis::use_data(countries,ttplot)
usethis::use_data(countries,ttplot,overwrite = TRUE)
countries
getwd()
list.files()
countries <- c("CHINA","USA")
usethis::use_data(countries,ttplot)
setwd("..")
install.packages("ttplot",repos = NULL, type = "source")
ttplot::hello_country()
ttplot::countries
file.edit("ttplot/R/hello_country.R")
ttplot::countries
ttplot::hello_country()
countries
ttplot::hello_country()
devtools::load_all("ttplot")
devtools::document()
setwd("ttplot/")
devtools::document()
setwd("..")
install.packages("ttplot",repos = NULL, type = "source")
ttplot::hello_country()
setwd("ttplot/")
ttplot::hello()
ttplot::hello_country()
ttplot::countries
rm(list=ls())
setwd("..")
install.packages("ttplot",repos = NULL, type = "source")
ttplot::countries
ttplot::hello_country()
?hello_country
hello_country(countries)
devtools::load_all("ttplot")
setwd("ttplot/")
devtools::document()
rm(list=ls())
q()
devtools::install_github("YTLogos/ttplot")
devtools::install_github("YTLogos/ttplot")
library(ttplot)
hello_country(countries)
remove.packages("vcfR")
devtools::install_github("YTLogos/ttplot")
library(ttplot)
remove.packages("ttplot")
devtools::install_github("YTLogos/ttplot")
rm(list=ls())
q()
devtools::install_github("YTLogos/ttplot")
devtools::install_github("YTLogos/ttplot")
devtools::install_github("YTLogos/ttplot")
devtools::install_github("YTLogos/ttplot")
devtools::install_github("YTLogos/ttplot")
devtools::install_github("YTLogos/ttplot")
devtools::install_github("YTLogos/ttplot")
devtools::install_github("YTLogos/ttplot")
devtools::install_github("YTLogos/ttplot")
usethis::use_package("vcfR")
usethis::use_package("dplyr")
usethis::use_package("LDheatmap")
usethis::use_package("dplyr")
BiocManager::install("vcfR")
usethis::use_package("vcfR")
remove.packages(c("vcfR","dplyr","ttplot"))
devtools::install_github("YTLogos/ttplot")
devtools::install_github("YTLogos/ttplot")
install.packages("dplyr")
install.packages("dplyr")
devtools::install_github("YTLogos/ttplot")
install.packages("tibble")
install.packages("purrr")
install.packages("purrr")
devtools::install_github("YTLogos/ttplot")
rm(list = ls())
q()
file.edit("R/convertToNumeric")
file.edit("R/convertToNumeric.R")
as.numeric(unlist(strsplit("1|1", "|"))[2])
as.numeric(unlist(strsplit("1|1", "|"))[3])
as.numeric(unlist(strsplit("1|0", "|"))[3])
as.numeric(unlist(strsplit("1/0", "/"))[3])
as.numeric(unlist(strsplit("1/0", "\/"))[3])
as.numeric(unlist(strsplit("1/0", "/"))[2])
file.edit("R/get_snpMat.R")
file.edit("R/convertToNumeric.R")
file.edit("R/snpinfo.R")
getwd()
setwd("..")
library(vcfR)
snp <- read.vcfR("sample1_snp.vcf")
info <- snp@gt
info <- snp@fix
head(info)
class(info)
snpInfo <- function(vcffile){
if(!require(vcfR)) BiocManager::install("vcfR")
require(vcfR)
snp <- read.vcfR("vcffile")
snp_info <- snp@fix
snp_info <- as.data.frame(snp_info)
snp_info$ID <- paste(snp_info$CHROM, snp_info$POS, sep = "_")
snp_info <- snp_info%>%dplyr::select(ID, POS)
snp_info$POS <- as.numeric(as.character(snp_info$POS))
return(snp_info)
}
info <- snpInfo("sample1_snp.vcf")
snpInfo <- function(file){
if(!require(vcfR)) BiocManager::install("vcfR")
require(vcfR)
snp <- read.vcfR("file")
snp_info <- snp@fix
snp_info <- as.data.frame(snp_info)
snp_info$ID <- paste(snp_info$CHROM, snp_info$POS, sep = "_")
snp_info <- snp_info%>%dplyr::select(ID, POS)
snp_info$POS <- as.numeric(as.character(snp_info$POS))
return(snp_info)
}
info <- snpInfo("sample1_snp.vcf")
getwd()
list.files()
info <- snpInfo("snp_in_vcf.vcf")
vcfR::read.vcfR(file = "sample1_snp.vcf")
snpInfo <- function(file){
if(!require(vcfR)) BiocManager::install("vcfR")
require(vcfR)
snp <- read.vcfR(file)
snp_info <- snp@fix
snp_info <- as.data.frame(snp_info)
snp_info$ID <- paste(snp_info$CHROM, snp_info$POS, sep = "_")
snp_info <- snp_info%>%dplyr::select(ID, POS)
snp_info$POS <- as.numeric(as.character(snp_info$POS))
return(snp_info)
}
info <- snpInfo("snp_in_vcf.vcf")
head(info)
glimpse(info)
snpInfo <- function(file){
if(!require(vcfR)) BiocManager::install("vcfR")
require(vcfR)
snp <- read.vcfR(file)
snp_info <- snp@fix
snp_info <- as.data.frame(snp_info)
snp_info$ID <- paste(snp_info$CHROM, snp_info$POS, sep = "_")
snp_info <- snp_info%>%dplyr::select(ID, POS)
snp_info$POS <- as.integer(as.character(snp_info$POS))
return(snp_info)
}
info <- snpInfo("snp_in_vcf.vcf")
glimpse(info)
file.edit("R/MyLDheatMap.R")
getwd()
file.edit("ttplot//R/MyLDheatMap.R")
basename("ttplot/R/snpInfo.R")
library(LDheatmap)
getwd()
setwd("ttplot/")
devtools::load_all(".")
devtools::document()
warnings()
setwd("..")
rm(list=ls())
remove.packages("ttplot")
devtools::install_github("YTLogos/ttplot")
devtools::install_github("YTLogos/ttplot")
getwd()
ttplot::MyLDheatMap("sample1_snp.vcf")
snpInfo("sample1_snp.vcf")
info <- snpInfo("sample1_snp.vcf")
devtools::install_github("YTLogos/ttplot")
info <- snpInfo("sample1_snp.vcf")
snp <- read.vcfR("sample1_snp.vcf", verbose = F)
devtools::install_github("YTLogos/ttplot")
info <- snpInfo("sample1_snp.vcf")
snpInfo <- function(file){
if(!require(vcfR)) BiocManager::install("vcfR")
require(vcfR)
snp <- read.vcfR(file,verbose = FALSE)
snp_info <- snp@fix
snp_info <- as.data.frame(snp_info)
snp_info$ID <- paste(snp_info$CHROM, snp_info$POS, sep = "_")
snp_info <- snp_info%>%dplyr::select(ID, POS)
snp_info$POS <- as.integer(as.character(snp_info$POS))
return(snp_info)
}
snp <- read.vcfR("sample1_snp.vcf",verbose = FALSE)
snp_info <- snp@fix
snp_info <- snp@fix
snp_info <- as.data.frame(snp_info)
snp_info$ID <- paste(snp_info$CHROM, snp_info$POS, sep = "_")
snp_info <- snp_info%>%dplyr::select(ID, POS)
snp_info$POS <- as.integer(as.character(snp_info$POS))
return(snp_info)
head(snp_info)
glimpse(snp_info)
snpInfo("sample1_snp.vcf")
remove.packages("ttplot")
snp_info$POS <- as.integer(as.character(snp_info$POS))
devtools::install_github("YTLogos/ttplot")
ttplot::MyLDheatMap("sample1_snp.vcf")
ttplot::MyLDheatMap("sample1_snp.vcf")
rgb.palette <- colorRampPalette(rev(c("yellow","red")), space="rgb")
myLDheatmap <- LDheatmap(gdat_snp, info$POS, color = rgb.palette(100), flip = TRUE, title = titleï¼‰
myLDheatmap <- LDheatmap(gdat_snp, info$POS, color = rgb.palette(100), flip = TRUE, title = title)
gdat_snp <- ttplot::snpMat("sample1_snp.vcf")
info <- ttplot::snpInfo("sample1_snp.vcf")
myLDheatmap <- LDheatmap(gdat_snp, info$POS, color = rgb.palette(100), flip = TRUE, title = title)
head(gdat_snp)
head(info)
LDheatmap(gdat_snp, info$POS, color = rgb.palette(100), flip = TRUE)
title
remove.packages("ttplot")
devtools::install_github("YTLogos/ttplot")
ttplot::MyLDheatMap("sample1_snp.vcf")
ttplot::MyLDheatMap("sample1_snp.vcf")
title <- sub(".vcf","",basename("/mypackages/sample1_snp.vcf"))
title
basename("/mypackages/sample1_snp.vcf")
sub(".vcf","","smaple.vcf")
rgb.palette <- colorRampPalette(rev(c("yellow","red")), space="rgb")
MyLDheatMap <- function(vcffile){
name <- basename(vcffile)
title <- sub(".vcf","",name)
gdat_snp <- snpMat(vcffile)
info <- snpInfo(vcffile)
rgb.palette <- colorRampPalette(rev(c("yellow","red")), space="rgb")
myLDheatmap <- LDheatmap(gdat_snp, info$POS, color = rgb.palette(100), flip = TRUE, title = title)
#  print(myLDheatmap)
}
MyLDheatMap("sample1_snp.vcf")
MyLDheatMap("sample1_snp.vcf")
MyLDheatMap <- function(vcffile){
name <- basename(vcffile)
title <- sub(".vcf","",name)
gdat_snp <- ttplot::snpMat(vcffile)
info <- ttplot::snpInfo(vcffile)
rgb.palette <- colorRampPalette(rev(c("yellow","red")), space="rgb")
myLDheatmap <- LDheatmap(gdat_snp, info$POS, color = rgb.palette(100), flip = TRUE, title = title)
#  print(myLDheatmap)
}
MyLDheatMap("sample1_snp.vcf")
MyLDheatMap <- function(vcffile){
name <- basename(vcffile)
title <- sub(".vcf","",name)
gdat_snp <- ttplot::snpMat(vcffile)
info <- ttplot::snpInfo(vcffile)
rgb.palette <- colorRampPalette(rev(c("yellow","red")), space="rgb")
myLDheatmap <- LDheatmap(gdat_snp, info$POS, color = rgb.palette(100), flip = TRUE, title = paste0("The LDheatmap of ",title))
#  print(myLDheatmap)
}
MyLDheatMap("sample1_snp.vcf")
convertToNumeric <- function(snp_data){
genodata <- matrix(NA, nrow = nrow(snp_data), ncol = ncol(snp_data))
for (a in 1:nrow(snp_data)){
for (b in 1:ncol(snp_data)){
m <- as.numeric(unlist(strsplit(snp_data[a,b], "/"))[1])
n <- as.numeric(unlist(strsplit(snp_data[a,b], "/"))[2])
genodata[a,b] <- m+n
}
}
rownames(genodata) <- rownames(snp_data)
colnames(genodata) <- colnames(snp_data)
return(genodata)
}
MyLDheatMap("sample1_snp.vcf")
LDheatmap(gdat_snp, info$POS,
color = rgb.palette(100),
flip = TRUE,
title = paste0("The LDheatmap of ",title),
add.map = FALSE)
ttplot::snpInfo("sample1_snp.vcf")
remove.packages("ttplot")
remove.packages("ttplot")
ttplot::snpInfo("sample1_snp.vcf")
remove.packages("ttplot")
devtools::install_github("YTLogos/ttplot")
ttplot::MyLDheatMap("sample1_snp.vcf")
?convert.snpMatrix
library(ttplot)
snpInfo()
snpInfo
remove.packages("ttplot")
devtools::install_github("YTLogos/ttplot")
library(ttplot)
snp_info
library(ttplot)
rm(list=ls())
library(ttplot)
snpInfo
info <- ttplot::snpInfo("sample1_snp.vcf")
info <- ttplot::snpInfo("sample1_snp.vcf")
snpInfo
?snpInfo
?snpInfo()
devtools::install_github("YTLogos/ttplot")
remove.packages("ttplot")
devtools::install_github("YTLogos/ttplot")
ttplot::snpInfo
getwd()
setwd("ttplot/")
devtools::load_all(".")
devtools::document()
devtools::load_all(".")
devtools::document()
remove.packages("ttplot")
devtools::install_github("YTLogos/ttplot")
ttplot::snpInfo
ttplot::MyLDheatMap("/mypackages/sample1_snp.vcf")
snpInfo <- function(file){
if(!require(vcfR)) BiocManager::install("vcfR")
require(vcfR)
snp <- read.vcfR(file,verbose = FALSE)
snp_info <- snp@fix
snp_info <- as.data.frame(snp_info)
snp_info$ID <- paste(snp_info$CHROM, snp_info$POS, sep = "_")
snp_info <- snp_info%>%dplyr::select(ID, POS)
snp_info$POS <- as.integer(as.character(snp_info$POS))
}
info <- snpInfo("/mypackages/sample1_snp.vcf")
head(info)
#' Obtain the snp info from the vcf file
#'
#' This function defined to get the snp info (ID, POS) from the vcf file.
#' @param file The vcf file name.
#' @return The snp info (ID, POS).
#' @export
#' @examples
#' snpInfo(sample.vcf)
snpInfo <- function(file){
if(!require(vcfR)) BiocManager::install("vcfR")
require(vcfR)
snp <- read.vcfR(file,verbose = FALSE)
snp_info <- snp@fix
snp_info <- as.data.frame(snp_info)
snp_info$ID <- paste(snp_info$CHROM, snp_info$POS, sep = "_")
snp_info <- snp_info%>%dplyr::select(ID, POS)
snp_info$POS <- as.integer(as.character(snp_info$POS))
return(snp_info)
}
info <- snpInfo("/mypackages/sample1_snp.vcf")
head(info)
devtools::load_all(".")
devtools::document()
remove.packages("ttplot")
devtools::install_github("YTLogos/ttplot")
ttplot::MyLDheatMap("/mypackages/sample1_snp.vcf")
warnings()
library(ttplot)
rm(list=ls())
q()
