test <- vcfR::read.vcfR("/mypackages/sample1_snp.vcf")
usethis::use_data_raw(test,ttplot)
usethis::use_data_raw()
usethis::use_data()
remove.packages("ttplot")
devtools::install_github("YTlogos/ttplot")
devtools::install_github("YTlogos/ttplot",build_vignettes=TRUE)
system.file("ttplot")
system.file(package = "ttplot","data")
system.file(package = "ttplot","data_raw")
remove.packages("ttplot")
devtools::install_github("YTlogos/ttplot")
remove.packages("ttplot")
devtools::install_github("YTlogos/ttplot")
test <- system.file("extdata", "test.vcf", package = "ttplot")
test
ttplot::MyLDheatMap(vcffile = test, title = "gene")
ttplot::MyLDheatMap(vcffile = test, title = "My gene region")
remove.packages("ttplot")
devtools::install_github("YTlogos/ttplot")
remove.packages("ttplot")
devtools::install_github("YTlogos/ttplot")
remove.packages("ttplot")
devtools::install_github("YTlogos/ttplot")
MyLDheatMap <- function(vcffile="",title=""){
if(!require(LDheatmap)) BiocManager::install("LDheatmap")
require(LDheatmap,quietly = T)
gdat_snp <- ttplot::getsnpMat(vcffile)
info <- ttplot::getsnpInfo(vcffile)
snp_dist <- as.numeric(info$POS)
rgb.palette <- colorRampPalette(rev(c("yellow","red")), space="rgb")
myLDheatmap <- LDheatmap(gdat_snp,
genetic.distances = info$POS,
color = rgb.palette(100),
flip = TRUE,
title = paste0("The LDheatmap of ",title))
print(myLDheatmap)
}
test
MyLDheatMap(test)
remove.packages("ttplot")
devtools::install_github("YTlogos/ttplot")
remove.packages("ttplot")
devtools::install_github("YTlogos/ttplot")
